{"version":3,"sources":["images/accountIcon.svg","components/Navigation/Navigation.js","components/Header/Header.js","components/Promo/Promo.js","components/NavTab/NavTab.js","components/Info/Info.js","components/AboutProject/AboutProject.js","components/Techs/Techs.js","images/myPhoto.jpg","components/AboutMe/AboutMe.js","components/Portfolio/Portfolio.js","components/Main/Main.js","components/Footer/Footer.js","utils/constants.js","components/SearchForm/SearchForm.js","components/FormValidator/FormValidator.js","utils/utils.js","utils/MoviesApi.js","contexts/CurrentUserContext.js","components/MoviesCard/MoviesCard.js","components/MoviesCardList/MoviesCardList.js","components/Movies/Movies.js","components/SavedMovies/SavedMovies.js","components/Profile/Profile.js","components/AuthForm/AuthForm.js","components/Login/Login.js","components/Register/Register.js","components/NotFoundPage/NotFoundPage.js","components/Menu/Menu.js","components/InfoPopup/InfoPopup.js","utils/MainApi.js","utils/auth.js","components/ProtectedRoute/ProtectedRoute.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Navigation","handleOnSavedMoviesClick","handleOnMoviesClick","useState","isMoviesClicked","setIsMoviesClicked","isSavedMoviesClicked","setIsSavedMoviesClicked","isMainClicked","setIsMainClicked","className","to","onClick","src","accountImg","alt","Header","pathname","isLoggedIn","handleMenuOpen","headerClassName","type","Promo","NavTab","href","Info","props","id","linkId","name","content","title","children","AboutProject","Techs","AboutMe","target","rel","myPhoto","Portfolio","Main","Footer","footerClassName","Date","getFullYear","emailInput","nameInput","loginType","registerType","validationConfig","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","errorSelector","validationConfigForProfile","failMessage","movieSearchFailedMessage","defaultProp","SearchForm","handleSearchSubmit","handleTumblerClick","movie","setMovie","isChecked","setIsChecked","handleInputChange","e","value","checked","console","log","onSubmit","preventDefault","placeholder","required","onChange","FormValidator","data","formElement","this","_inputSelector","_submitButtonSelector","_inactiveButtonClass","_inputErrorClass","_errorClass","_errorSelector","_formElement","_button","querySelector","_inputList","Array","from","querySelectorAll","input","errorMessage","error","classList","add","textContent","remove","validity","valid","_hideInputError","_showInputError","validationMessage","removeAttribute","setAttribute","some","_hasInvalidInput","_disableButton","_enableButton","forEach","addEventListener","_handleReset","_checkInputValidity","toggleButtonState","_setEventListenersForReset","validateForm","form","config","formValidator","enableValidation","checkMovieTitle","query","nameRU","toLowerCase","replaceAll","split","includes","nameEN","searchMovies","movies","isShortFilm","queryArr","trim","filter","i","length","duration","checkIfIsShort","BASE_URL_MOVIE","moviesApi","options","baseUrl","res","ok","json","Promise","reject","Error","status","fetch","headers","then","_getResponseData","CurrentUserContext","React","createContext","MoviesCard","min","image","isOnSavedPage","saveMovie","deleteMovie","currentUser","useContext","isSaved","owner","_id","saveButtonClassName","trailer","style","background","url","aria-label","Math","floor","MoviesCardList","movieList","isFound","isRequestDone","amountToRender","moviesCardlistClassName","slice","map","uuidv4","Movies","handleMoreBtnClick","isMoreBtnVisible","SavedMovies","Profile","handleLogout","handleSubmit","setName","email","setEmail","formRef","useRef","useEffect","current","method","ref","minLength","maxLength","pattern","AuthForm","greeting","isNameVisible","buttonText","captionText","route","navLinkText","password","setPassword","Login","onLogin","Register","onRegister","NotFoundPage","history","useHistory","goBack","Menu","handleMenuClose","isOpen","InfoPopup","closePopup","message","mainApi","jwt","authorization","body","JSON","stringify","country","director","year","description","trailerLink","thumbnail","formats","movieId","deleteMovieFromSaved","BASE_URL","ProtectedRoute","Component","component","App","location","useLocation","setIsLoggedIn","isMenuOpen","setIsMenuOpen","isInfoPopupOpen","setIsInfoPopupOpen","isRegisterFailed","setIsRegisterFailed","beatfilmMovies","setBeatfilmMovies","setMovies","savedMovies","setSavedMovies","setCurrentUser","isFoundInMovies","setIsFoundInMovies","isFoundInSavedMovies","setIsFoundInSavedMovies","popupMessage","setPopupMessage","setIsRequestDone","isRequestInSavedDone","setIsRequestInSavedDone","setAmountToRender","setIsMoreBtnVisible","setIsOnSavedPage","localStorage","getItem","all","getMovies","getUserInfo","values","userInfo","setItem","parse","catch","err","token","push","handleTokenCheck","removeItem","handleSearchInMovies","resolve","getBeatFilmMovies","searchPromise","moviesWithSavedOnes","find","m","updateMovies","openInfoPopup","finally","handleSearchInSaved","searchInSavedPromise","localSavedMovies","shortFilms","filterShortFilmsInSaved","localMovies","filterShortFilms","newSavedMovies","deletedMovie","newMovies","closeAllPopups","handleLogin","auth","Provider","exact","path","newAmount","updateUserInfo","isFailed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.607a3c1c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/accountIcon.8c78cf51.svg\";","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navigation.css';\nimport accountImg from '../../images/accountIcon.svg';\n\n\nconst Navigation = ({ handleOnSavedMoviesClick, handleOnMoviesClick }) => {\n  const [isMoviesClicked, setIsMoviesClicked] = useState(false);\n  const [isSavedMoviesClicked, setIsSavedMoviesClicked] = useState(false);\n  const [isMainClicked, setIsMainClicked] = useState(false);\n\n  const handleMoviesClick = () => {\n    handleOnMoviesClick();\n    setIsMoviesClicked(true);\n    setIsSavedMoviesClicked(false);\n    setIsMainClicked(false);\n  }\n\n  const handleSavedMoviesClick = () => {\n    handleOnSavedMoviesClick();\n    setIsSavedMoviesClicked(true);\n    setIsMoviesClicked(false);\n    setIsMainClicked(false);\n  }\n\n  const handleMainClicked = () => {\n    setIsMainClicked(true);\n    setIsSavedMoviesClicked(false);\n    setIsMoviesClicked(false);\n  }\n\n  return (\n    <nav className=\"nav\">\n      <div className=\"nav__options\">\n        <NavLink to=\"/\" className={`nav__link nav__link_type_main ${isMainClicked && 'nav__link_active'}`}\n          onClick={handleMainClicked}>Главная</NavLink>\n        <div className=\"nav__movies\">\n          <NavLink to=\"/movies\" className={`nav__link ${isMoviesClicked && 'nav__link_active'}`}\n            onClick={handleMoviesClick}>Фильмы</NavLink>\n          <NavLink to=\"/saved-movies\" className={`nav__link ${isSavedMoviesClicked && 'nav__link_active'}`}\n            onClick={handleSavedMoviesClick}>Сохраненные фильмы</NavLink>\n        </div>\n        <NavLink to=\"/profile\" className=\"nav__account\">\n          <img className=\"nav__account-img\" src={accountImg} alt=\"Аккаунт\" />\n          Аккаунт\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;","import './Header.css';\nimport { NavLink } from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\n// import accountImg from '../../images/accountIcon.svg';\n\nconst Header = ({ pathname, isLoggedIn, handleMenuOpen, handleOnSavedMoviesClick, handleOnMoviesClick }) => {\n  const headerClassName = (\n    `header \n      ${(pathname === '/movies' || pathname === '/saved-movies' || pathname==='/profile') && 'header_logged-in'}\n      ${(pathname === '/signin' || pathname === '/signup') && 'header_invisible'}\n      `\n  )\n  return (\n    <header className={headerClassName}>\n      <div className=\"header__container\">\n        <NavLink to=\"/\" className=\"header__logo\"/>\n        {\n          !isLoggedIn && pathname === '/' ?\n            <nav className=\"header__options\">\n              <NavLink to=\"/signup\" className=\"header__option header__option_to-register\">Регистрация</NavLink>\n              <NavLink to=\"/signin\" className=\"header__option header__option_to-login\">Войти</NavLink>\n            </nav> :\n            <div className=\"header__nav\">\n              <Navigation handleOnSavedMoviesClick={handleOnSavedMoviesClick} handleOnMoviesClick={handleOnMoviesClick} />\n            </div>\n        }\n        {isLoggedIn && <button className=\"header__menu-btn\" type=\"button\" onClick={handleMenuOpen}></button>}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import './Promo.css';\n\nconst Promo = () => {\n  return(\n    <section className=\"promo\">\n      <div className=\"promo__container\">\n        <h1 className=\"promo__title\">Учебный проект студента факультета Веб-разработки.</h1>\n      </div>\n    </section>\n  );\n}\n\nexport default Promo;","import './NavTab.css';\n\nconst NavTab = () => {\n  return (\n    <section className=\"navtab\">\n      <nav className=\"navtab__container\">\n        <ul className=\"navtab__list\">\n          <li className=\"navtab__item\">\n            <a href=\"#about-project\" className=\"navtab__link\">О проекте</a>\n          </li>\n          <li className=\"navtab__item\">\n            <a href=\"#techs\" className=\"navtab__link\">Технологии</a>\n          </li>\n          <li className=\"navtab__item\">\n            <a href=\"#about-student\" className=\"navtab__link\">Студент</a>\n          </li>\n        </ul>\n      </nav>\n    </section>\n\n  );\n};\n\nexport default NavTab;","import './Info.css';\n\nconst Info = (props) => {\n  return (\n    <section className={`info info_type_${props.type}`}>\n      <div className={`info__container info__container_type_${props.type}`}>\n        <h2 className=\"info__title\">\n          {// eslint-disable-next-line jsx-a11y/anchor-is-valid\n          <a id={props.linkId} name={props.linkId} className=\"info__anchor\">{props.content}</a>}\n        {props.title}\n      </h2>\n      {props.children}\n      </div>\n    </section>\n  );\n};\n\nexport default Info;","import './AboutProject.css';\nimport Info from '../Info/Info';\n\nconst AboutProject = () => {\n  return (\n    <Info title=\"О проекте\" linkId=\"about-project\" type=\"project\" content=\"Информация о проекте.\">\n      <ul className=\"project-info\">\n        <li className=\"project-info__phase\">\n          <p className=\"project-info__text project-info__text_type_title\">Дипломный проект включал 5 этапов</p>\n        </li>\n        <li className=\"project-info__phase-descr\">\n          <p className=\"project-info__text project-info__text_type_description\">Составление плана, работу над бэкендом, вёрстку, добавление функциональности и финальные доработки.</p>\n        </li>\n        <li className=\"project-info__timing\">\n          <p className=\"project-info__text project-info__text_type_title\">На выполнение диплома ушло 5 недель</p>\n        </li>\n        <li className=\"project-info__timing-descr\">\n          <p className=\"project-info__text project-info__text_type_description\">У каждого этапа был мягкий и жесткий дедлайн, которые нужно было соблюдать, чтобы успешно защититься.</p>\n        </li>\n      </ul>\n      <div className=\"project-info__scale\">\n        <div className=\"project-info__period\">\n          <p className=\"project-info__text\">1 неделя</p>\n        </div>\n        <p className=\"project-info__text project-info__text_type_back\">Back-end</p>\n        <div className=\"project-info__period\">\n          <p className=\"project-info__text\">4 недели</p>\n        </div>\n        <p className=\"project-info__text project-info__text_type_front\">Front-end</p>\n      </div>\n    </Info>\n  );\n};\n\nexport default AboutProject;","import './Techs.css';\nimport Info from '../Info/Info';\n\nconst Techs = () => {\n  return (\n    <Info title=\"Технологии\" linkId=\"techs\" type=\"techs\" content=\"Информация о технологиях.\">\n      <div className=\"techs\">\n        <h2 className=\"techs__title\">Технологии</h2>\n        <p className=\"techs__text\">На курсе веб-разработки мы освоили технологии, которые применили\n        в дипломном проекте.</p>\n        <ul className=\"techs__list\">\n          <p className=\"techs__item\">HTML</p>\n          <p className=\"techs__item\">CSS</p>\n          <p className=\"techs__item\">JS</p>\n          <p className=\"techs__item\">React</p>\n          <p className=\"techs__item\">Git</p>\n          <p className=\"techs__item\">Express.js</p>\n          <p className=\"techs__item\">mongoDB</p>\n        </ul>\n      </div>\n    </Info>\n  );\n};\n\nexport default Techs;","export default __webpack_public_path__ + \"static/media/myPhoto.c2719cec.jpg\";","import './AboutMe.css';\nimport Info from '../Info/Info';\nimport myPhoto from '../../images/myPhoto.jpg';\n\nconst AboutMe = () => {\n  return (\n    <Info title=\"Студент\" linkId=\"about-student\" type=\"student\" content=\"Информация о студенте.\">\n      <div className=\"student-info\">\n        <h2 className=\"student-info__title\">Анна</h2>\n        <p className=\"student-info__subtitle\">Фронтенд-разработчик, 29 лет</p>\n        <p className=\"student-info__text\">Я родилась и живу в Москве, закончила факультет товароведения\n        в РЭУ им. Плеханова. В свободное время люблю заниматься йогой и читать детективы. Несколько лет работала\n        в сфере маркетинга. Но тут в моей жизни появилось программирование. До сих пор удивляюсь, как можно было\n        раньше заниматься чем-то другим. </p>\n        <ul className=\"student-info__links\">\n          <li>\n            <a className=\"student-info__link\" href=\"https://www.facebook.com/anna.kozhevatova/\"\n              target=\"_blank\" rel=\"noreferrer\">Facebook</a>\n          </li>\n          <li>\n            <a className=\"student-info__link\" href=\"https://github.com/kozhevatova\"\n              target=\"_blank\" rel=\"noreferrer\">Github</a>\n          </li>\n        </ul>\n        <img className=\"student-info__photo\" src={myPhoto} alt=\"Фото студента.\" />\n      </div>\n    </Info>\n  );\n};\n\nexport default AboutMe;","import './Portfolio.css';\n\nconst Portfolio = () => {\n  return(\n    <section className=\"portfolio\">\n      <div className=\"portfolio__container\">\n        <h4 className=\"portfolio__title\">Портфолио</h4>\n        <ul className=\"portfolio__links\">\n          <li className=\"portfolio__item\">\n            <a className=\"portfolio__link\" href=\"https://kozhevatova.github.io/how-to-learn/index.html\" target=\"_blank\" rel=\"noreferrer\">\n              Статичный сайт</a>\n          </li>\n          <li className=\"portfolio__item\">\n            <a className=\"portfolio__link\" href=\"https://kozhevatova.github.io/russian-travel/index.html\" target=\"_blank\" rel=\"noreferrer\">\n              Адаптивный сайт</a>\n          </li>\n          <li className=\"portfolio__item\">\n            <a className=\"portfolio__link\" href=\"https://annakin.students.nomoreparties.space\" target=\"_blank\" rel=\"noreferrer\">\n              Одностраничное приложение</a>\n          </li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default Portfolio;","import Promo from '../Promo/Promo';\nimport NavTab from '../NavTab/NavTab';\nimport './Main.css';\nimport AboutProject from '../AboutProject/AboutProject';\nimport Techs from '../Techs/Techs';\nimport AboutMe from '../AboutMe/AboutMe';\nimport Portfolio from '../Portfolio/Portfolio';\n\nconst Main = () => {\n  return (\n    <main>\n        <Promo />\n        <NavTab />\n        <AboutProject/>\n        <Techs/>\n        <AboutMe/>\n        <Portfolio/>\n    </main>\n  );\n};\n\nexport default Main;","import './Footer.css';\n\nconst Footer = ({pathname}) => {\n  const footerClassName = (\n    `footer\n    ${(pathname === '/signin' || pathname==='/signup') && 'footer_invisible'}`\n  )\n  return(\n    <footer className={footerClassName}>\n      <div className=\"footer__container\">\n        <p className=\"footer__caption\">Учебный проект Яндекс.Практикум х BeatFilm</p>\n        <div className=\"footer__info\">\n          <p className=\"footer__date\">&copy; <span id=\"year\">{new Date().getFullYear()}</span></p>\n          <ul className=\"footer__links\">\n            <li className=\"footer__item\">\n              <a className=\"footer__link\" href=\"https://praktikum.yandex.ru/\" target=\"_blank\" rel=\"noreferrer\">Яндекс.Практикум</a>\n            </li>\n            <li className=\"footer__item\">\n              <a className=\"footer__link\" href=\"https://github.com/kozhevatova\" target=\"_blank\" rel=\"noreferrer\">Github</a>\n            </li>\n            <li className=\"footer__item\">\n              <a className=\"footer__link\" href=\"https://www.facebook.com/anna.kozhevatova/\" target=\"_blank\" rel=\"noreferrer\">Facebook</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","const emailInput = 'emailInput';\nconst passwordInput = 'passwordInput';\nconst nameInput = 'nameInput';\nconst movieInput = 'movieInput';\nconst shortFilmCheckbox = 'shortFilmCheckbox';\nconst loginType = 'login';\nconst registerType = 'register';\n\nconst validationConfig = {\n  inputSelector: '.auth__input',\n  submitButtonSelector: '.auth__submit-btn',\n  inactiveButtonClass: 'auth__submit-btn_disabled',\n  inputErrorClass: 'auth__input_type_error',\n  errorClass: 'auth__input-error_active',\n  errorSelector: '.auth__input-error',\n}\n\nconst validationConfigForProfile = {\n  inputSelector: '.profile__input',\n  submitButtonSelector: '.profile__button',\n  inactiveButtonClass: 'profile__button_disabled',\n  inputErrorClass: 'profile__input_type_error',\n  errorClass: 'profile__input-error_active',\n  errorSelector: '.profile__input-error',\n}\n\nconst registerSuccessMessage = 'Вы успешно зарегистрированы!';\nconst failMessage = 'Произошла ошибка! Попробуйте ещё раз.';\nconst updateSuccessMessage = 'Данные успешно обновлены!';\nconst movieSearchFailedMessage = 'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз';\nconst defaultProp = 'default';\n\nexport {\n  emailInput, passwordInput, nameInput, movieInput, shortFilmCheckbox,\n  validationConfig, validationConfigForProfile, loginType, registerType,\n  registerSuccessMessage, failMessage, updateSuccessMessage, movieSearchFailedMessage, defaultProp\n};","import { useState } from 'react';\nimport { movieInput, shortFilmCheckbox } from '../../utils/constants';\nimport './SearchForm.css';\n\nconst SearchForm = ({ handleSearchSubmit, handleTumblerClick }) => {\n  const [movie, setMovie] = useState('');\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSearchSubmit(movie, isChecked);\n  }\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case movieInput: setMovie(e.target.value);\n        break;\n      case shortFilmCheckbox: {\n        setIsChecked(e.target.checked);\n        handleTumblerClick(e.target.checked, movie);\n        break;\n      }\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  return (\n    <div className=\"search\">\n      <form className=\"search__form\" onSubmit={handleSubmit}>\n        <input className=\"search__input\" placeholder=\"Фильм\" required value={movie}\n          onChange={handleInputChange} name=\"movieInput\"></input>\n        <button type=\"submit\" className=\"search__button\">Поиск</button>\n      </form>\n      <label className=\"search__tumbler\">\n        <input type=\"checkbox\" name=\"shortFilmCheckbox\" className=\"search__checkbox\"\n          checked={isChecked} onChange={handleInputChange}></input>\n        <span className=\"search__slider\"></span>\n        <span className=\"search__label-text\">Короткометражки</span>\n      </label>\n    </div>\n\n  );\n};\n\nexport default SearchForm;","class FormValidator {\n  constructor(data, formElement) {\n    this._inputSelector = data.inputSelector;\n    this._submitButtonSelector = data.submitButtonSelector;\n    this._inactiveButtonClass = data.inactiveButtonClass;\n    this._inputErrorClass = data.inputErrorClass;\n    this._errorClass = data.errorClass;\n    this._errorSelector = data.errorSelector;\n    this._formElement = formElement;\n    this._button = formElement.querySelector(data.submitButtonSelector);\n    this._inputList = Array.from(formElement.querySelectorAll(data.inputSelector));\n  }\n\n  // отображение ошибки ввода\n  _showInputError(input, errorMessage) {\n    const error = this._formElement.querySelector(`#${input.id}-error`);\n    input.classList.add(this._inputErrorClass);\n    error.textContent = errorMessage; \n    error.classList.add(this._errorClass);\n  }\n\n  // удаление ошибки ввода\n  _hideInputError(input) {\n    const error = this._formElement.querySelector(`#${input.id}-error`);\n    input.classList.remove(this._inputErrorClass);\n    error.textContent = '';\n    error.classList.remove(this._errorClass);\n  }\n\n  // проверка валидности ввода\n  _checkInputValidity(input) {\n    if (!input.validity.valid) {\n      this._showInputError(input, input.validationMessage);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n  // сделать кнопку активной\n  _enableButton() {\n    this._button.classList.remove(this._inactiveButtonClass);\n    this._button.removeAttribute('disabled');\n  }\n\n  // сделать кнопку неактивной\n  _disableButton() {\n    this._button.classList.add(this._inactiveButtonClass);\n    this._button.setAttribute('disabled', 'true');\n  }\n\n  // проверка наличия хотя бы одного неверного ввода\n  _hasInvalidInput() {\n    return this._inputList.some((input) => !input.validity.valid);\n  }\n\n  // изменение активности submit кнопки\n  toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._disableButton();\n    } else {\n      this._enableButton();\n    }\n  }\n\n  // удаление ошибки ввода при закрытии формы\n  _handleReset() {\n    this._inputList.forEach((input) => {\n      this._hideInputError(input);\n    });\n  }\n\n  _setEventListenersForReset() {\n    this._formElement.addEventListener('reset', () => {\n      this._handleReset();\n    });\n  }\n\n  // настройка валидации\n  enableValidation() {\n    this._inputList.forEach((input) => {\n      input.addEventListener('input', () => {\n        this._checkInputValidity(input);\n        this.toggleButtonState();\n      });\n    });\n\n    this._setEventListenersForReset();\n  }\n}\n\nexport default FormValidator;\n","import FormValidator from '../components/FormValidator/FormValidator';\nimport { validationConfig, validationConfigForProfile } from './constants';\n\n// включить валидацию формы\nconst validateForm = (form, config) => {\n  const formValidator = new FormValidator(config, form);\n  formValidator.enableValidation();\n  return formValidator;\n};\n\nconst validateAuthForm = (form) => {\n  return validateForm(form, validationConfig);\n}\n\nconst validateProfileForm = (form) => {\n  return validateForm(form, validationConfigForProfile);\n}\n\nconst convertMinToHours = (min) => {\n  return `${Math.floor(min/60)}ч${min % 60}м`\n}\n\nconst checkMovieTitle = (movie, query) => {\n  return movie.nameRU.toLowerCase().replaceAll(/[\"«»]/g, '').split(' ').includes(query.toLowerCase()) ||\n    (movie.nameEN && movie.nameEN.toLowerCase().replaceAll(/[\"«»]/g, '').split(' ').includes(query.toLowerCase()));\n}\n\nconst checkIfIsShort = (movie) => {\n  return movie.duration <= 40;\n}\n\nconst searchMovies = (movies,query, isShortFilm) => {\n  const queryArr = query.toLowerCase().trim().split(' ');\n  const result = movies.filter((movie) => {\n    for(let i = 0; i < queryArr.length; i++) {\n      if(!checkMovieTitle(movie, queryArr[i])) {\n        return false;\n      } \n    }\n    if(isShortFilm) {\n      return checkIfIsShort(movie);\n    }\n    return true;\n  });\n  return result;\n}\n\n\nexport { validateAuthForm, validateProfileForm, convertMinToHours, searchMovies, checkIfIsShort };","export const BASE_URL_MOVIE = \"https://api.nomoreparties.co\";\n\nclass MoviesApi {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getBeatFilmMovies() {\n    return fetch(`${this.baseUrl}/beatfilm-movies`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then((res) => this._getResponseData(res));\n  }\n}\n\nconst moviesApi = new MoviesApi({\n  baseUrl: BASE_URL_MOVIE\n});\n\nexport default moviesApi;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import { useContext } from 'react';\nimport { convertMinToHours } from '../../utils/utils';\nimport { BASE_URL_MOVIE } from '../../utils/MoviesApi';\nimport './MoviesCard.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nconst MoviesCard = ({ movie, image, nameRU, duration, isOnSavedPage, saveMovie, deleteMovie }) => {\n  const currentUser = useContext(CurrentUserContext);\n  const isSaved = movie.owner && movie.owner === currentUser._id;\n\n  const handleSaveBtnClick = () => {\n    if (isSaved) {\n      deleteMovie(movie._id, movie);\n    } else {\n      saveMovie(movie);\n    }\n  }\n\n  const handleDeleteBtnClick = () => {\n    deleteMovie(movie._id, movie);\n  }\n\n  const saveButtonClassName = (\n    `movies-card__button movies-card__button_type_save ${isSaved && 'movies-card__button_type_clicked-save'}`\n  );\n\n  return (\n    <li className=\"movies-card\">\n      <a className=\"movies-card__image-link\" href={movie.trailer} target=\"_blank\" rel=\"noreferrer\">\n          <div className=\"movies-card__image\" style={{ background: `center/cover url(${(isSaved && image) ? image : BASE_URL_MOVIE + image.url}) no-repeat` }}></div>\n        </a>\n      <p className=\"movies-card__title\">{nameRU}</p>\n      {\n        isOnSavedPage ?\n          <button type=\"button\" className=\"movies-card__button movies-card__button_type_delete\"\n            aria-label=\"Удалить фильм.\" onClick={handleDeleteBtnClick}></button> :\n          <button type=\"button\" className={saveButtonClassName} onClick={handleSaveBtnClick} aria-label=\"Сохранить фильм.\"></button>\n      }\n      <p className=\"movies-card__duration\">{convertMinToHours(duration)}</p>\n    </li>\n  );\n};\n\nexport default MoviesCard;","import MoviesCard from \"../MoviesCard/MoviesCard\";\nimport { v4 as uuidv4 } from 'uuid';\nimport './MoviesCardList.css';\n\nconst MoviesCardList = ({ movieList, isOnSavedPage, saveMovie, deleteMovie, isFound, isRequestDone, amountToRender }) => {\n\n  const moviesCardlistClassName = (\n    `movies-cardlist \n    ${!isRequestDone && 'movies-cardlist_hidden'}`\n  );\n  \n  return <ul className={moviesCardlistClassName}>\n    {\n      isFound ? movieList.slice(0,amountToRender).map((movie) => {\n        return <MoviesCard key={uuidv4()} movie={movie} image={movie.image}\n          nameRU={movie.nameRU} duration={movie.duration} isOnSavedPage={isOnSavedPage}\n          saveMovie={saveMovie} deleteMovie={deleteMovie} />\n      }) : <li className=\"movies-cardlist__not-found-text\">Ничего не найдено</li>\n    }\n  </ul>\n}\n\nexport default MoviesCardList;","import SearchForm from '../SearchForm/SearchForm';\nimport './Movies.css';\nimport MoviesCardList from '../MoviesCardList/MoviesCardList';\n\nconst Movies = ({ movies, handleSearchSubmit, handleTumblerClick, saveMovie, deleteMovie, isFound,\n  isRequestDone, amountToRender, handleMoreBtnClick, isMoreBtnVisible }) => {\n\n  const onMoreBtnClick = () => {\n    handleMoreBtnClick(amountToRender);\n  }\n\n  return (\n    <section className=\"movies\">\n      <SearchForm handleSearchSubmit={handleSearchSubmit} handleTumblerClick={handleTumblerClick} />\n      <MoviesCardList movieList={movies} isOnSavedPage={false} saveMovie={saveMovie} deleteMovie={deleteMovie}\n        isFound={isFound} isRequestDone={isRequestDone} amountToRender={amountToRender} />\n      {isMoreBtnVisible && <button className=\"movies__more-btn\" type=\"button\" onClick={onMoreBtnClick}>Ещё</button>}\n    </section>\n  );\n};\n\nexport default Movies;","import MoviesCardList from '../MoviesCardList/MoviesCardList';\nimport SearchForm from '../SearchForm/SearchForm';\nimport './SavedMovies.css';\n\nconst SavedMovies = ({ movies, handleSearchSubmit, handleTumblerClick, saveMovie, deleteMovie, isFound, isRequestDone }) => {\n  return (\n    <section className=\"saved-movies\">\n      <SearchForm handleSearchSubmit={handleSearchSubmit} handleTumblerClick={handleTumblerClick} />\n      <MoviesCardList movieList={movies} isOnSavedPage={true} saveMovie={saveMovie} deleteMovie={deleteMovie}\n        isFound={isFound} isRequestDone={isRequestDone} />\n    </section>\n  );\n};\n\nexport default SavedMovies;","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport { emailInput, nameInput } from '../../utils/constants';\nimport { validateProfileForm } from '../../utils/utils';\nimport './Profile.css';\n\nconst Profile = ({ handleLogout, handleSubmit }) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  const [name, setName] = useState(currentUser.name);\n  const [email, setEmail] = useState(currentUser.email);\n\n  const formRef = useRef();\n\n  useEffect(() => {\n    validateProfileForm(formRef.current).enableValidation();\n  }, []);\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case nameInput: setName(e.target.value);\n        break;\n      case emailInput: setEmail(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!email || !name) {\n      return;\n    }\n    handleSubmit(email, name);\n  }\n  return (\n    <section className=\"profile\">\n      <form className=\"profile__form\" method=\"POST\" onSubmit={onSubmit} ref={formRef}>\n        <h3 className=\"profile__greeting\">Привет, {currentUser.name} !</h3>\n        <div className=\"profile__inputs\">\n          <p className=\"profile__text profile__text_type_name\">Имя</p>\n          <div className=\"profile__area profile__area_type_name\">\n            <input className=\"profile__input profile__input_type_name\" placeholder=\"Имя\" id=\"name-input\"\n              name=\"nameInput\" value={name} onChange={handleInputChange} minLength=\"2\" maxLength=\"30\" required></input>\n            <span className=\"profile__input-error\" id=\"name-input-error\"></span>\n          </div>\n          <div className=\"profile__area profile__area_type_email\">\n            <input className=\"profile__input profile__input_type_email\" type=\"email\" placeholder=\"Почта\"\n              id=\"email-input\" value={email} name=\"emailInput\" onChange={handleInputChange} required\n              pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[a-z]{2,})\\b\"></input>\n            <span className=\"profile__input-error\" id=\"email-input-error\"></span>\n          </div>\n          <p className=\"profile__text profile__text_type_email\">Почта</p>\n        </div>\n        <button type=\"submit\" className=\"profile__button\">Редактировать</button>\n        <NavLink to=\"/\" className=\"profile__link\" onClick={handleLogout}>Выйти из аккаунта</NavLink>\n      </form>\n    </section>\n  );\n};\n\nexport default Profile;","import React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './AuthForm.css';\nimport { emailInput, passwordInput, nameInput, loginType, registerType } from '../../utils/constants';\nimport { validateAuthForm } from '../../utils/utils';\n\nconst AuthForm = ({ greeting, isNameVisible, buttonText, handleSubmit,\n  captionText, route, navLinkText, type }) => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const formRef = useRef();\n\n  useEffect(() => {\n    validateAuthForm(formRef.current).enableValidation();\n  }, []);\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case nameInput: setName(e.target.value);\n        break;\n      case emailInput: setEmail(e.target.value);\n        break;\n      case passwordInput: setPassword(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      return;\n    }\n    switch (type) {\n      case loginType: handleSubmit(email, password);\n        break;\n      case registerType: handleSubmit(email, password, name);\n        break;\n      default:\n        console.log(`Нет такой формы ${type}`);\n        break;\n    }\n  }\n\n  return (\n    <form className=\"auth\" method=\"POST\" onSubmit={onSubmit} ref={formRef}>\n      <NavLink to=\"/\" className=\"auth__logo\" />\n      <h3 className=\"auth__greeting\">{greeting}</h3>\n\n      <div className=\"auth__inputs\">\n        {isNameVisible &&\n          <div className=\"auth__name-area\">\n            <label className=\"auth__label\">Имя</label>\n            <input className=\"auth__input\" placeholder=\"Имя\" name=\"nameInput\" required id=\"name-input\"\n              minLength=\"2\" maxLength=\"30\" value={name} onChange={handleInputChange} />\n            <span className=\"auth__input-error\" id=\"name-input-error\"></span>\n          </div>\n        }\n\n        <label className=\"auth__label\">Email</label>\n        <input className=\"auth__input\" placeholder=\"Email\" type=\"email\" name=\"emailInput\" required\n          id=\"email-input\" value={email} onChange={handleInputChange}\n          pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[a-z]{2,})\\b\" />\n        <span className=\"auth__input-error\" id=\"email-input-error\"></span>\n\n        <label className=\"auth__label\">Пароль</label>\n        <input className=\"auth__input\" placeholder=\"Пароль\" type=\"password\" minLength=\"8\"\n          required name=\"passwordInput\" id=\"password-input\" value={password} onChange={handleInputChange} />\n        <span className=\"auth__input-error\" id=\"password-input-error\"></span>\n      </div>\n\n      <button className=\"auth__submit-btn\" type=\"submit\">{buttonText}</button>\n      <p className=\"auth__caption\">{captionText}\n        <NavLink to={route} className=\"auth__link\">{navLinkText}</NavLink>\n      </p>\n    </form>\n  );\n};\n\nexport default AuthForm;","import AuthForm from '../AuthForm/AuthForm';\nimport { loginType } from '../../utils/constants';\nimport './Login.css';\n\nconst Login = ({ onLogin }) => {\n  return (\n    <section className=\"login\">\n      <AuthForm\n        greeting=\"Рады видеть!\"\n        isNameVisible={false}\n        buttonText=\"Войти\"\n        handleSubmit={onLogin}\n        captionText=\"Еще не зарегистированы? \"\n        route=\"/signup\"\n        navLinkText=\"Регистрация\"\n        type={loginType}\n      />\n    </section>\n  );\n};\n\nexport default Login;","import AuthForm from '../AuthForm/AuthForm';\nimport { registerType } from '../../utils/constants';\nimport './Register.css';\n\nconst Register = ({ onRegister }) => {\n  return(\n    <section className=\"register\">\n      <AuthForm\n      greeting=\"Добро пожаловать!\"\n      isNameVisible={true}\n      buttonText=\"Зарегистрироваться\"\n      handleSubmit={onRegister}\n      captionText=\"Уже зарегистрированы? \"\n      route=\"/signin\"\n      navLinkText=\"Войти\"\n      type={registerType}\n    />\n    </section>\n    \n  );\n};\n\nexport default Register;","import { useHistory } from 'react-router-dom';\nimport './NotFoundPage.css';\n\nconst NotFoundPage = () => {\n  const history = useHistory();\n  const handleGoBack = () => {\n    history.goBack();\n  }\n  return(\n    <section className=\"not-found\">\n      <h1 className=\"not-found__title\">404</h1>\n      <p className=\"not-found__text\">Страница не найдена</p>\n      <button className=\"not-found__link\" onClick={handleGoBack}>Назад</button>\n    </section>\n  );\n}\n\nexport default NotFoundPage;","import './Menu.css';\nimport Navigation from '../Navigation/Navigation';\n\nconst Menu = ({ handleMenuClose, isOpen, handleOnSavedMoviesClick, handleOnMoviesClick }) => {\n  return (\n    <section className={`menu ${isOpen && 'menu_opened'}`}>\n      <div className=\"menu__area\">\n        <button className=\"menu__close-btn\" onClick={handleMenuClose}></button>\n        <Navigation handleOnSavedMoviesClick={handleOnSavedMoviesClick} handleOnMoviesClick={handleOnMoviesClick} />\n      </div>\n    </section>\n  );\n};\n\nexport default Menu;","import './InfoPopup.css';\n\nconst InfoPopup = ({ closePopup, isOpen, message }) => {\n  return (\n    <section className={`popup ${isOpen && 'popup_opened'}`}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-btn\" type=\"button\" onClick={closePopup}></button>\n        <p className=\"popup__message\">{message}</p>\n      </div>\n    </section>\n  );\n}\n\nexport default InfoPopup;","import { BASE_URL_MOVIE } from \"./MoviesApi\";\nimport { defaultProp } from './constants';\n\nclass MainApi {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getMovies(jwt) {\n    return fetch(`${this.baseUrl}/movies`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    }).then((res) => this._getResponseData(res));\n  }\n\n  saveMovie(jwt, movie) {\n    return fetch(`${this.baseUrl}/movies`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        country: movie.country ? movie.country : defaultProp, \n        director: movie.director ? movie.director : defaultProp, \n        duration: movie.duration ? movie.duration : 0, \n        year: movie.year ? movie.year : 0, \n        description: movie.description ? movie.description : defaultProp, \n        image: movie.image.url ? BASE_URL_MOVIE + movie.image.url : movie.image, \n        trailer: movie.trailer ? movie.trailer : movie.trailerLink, \n        nameRU: movie.nameRU ? movie.nameRU : defaultProp, \n        nameEN: movie.nameEN ? movie.nameEN : defaultProp, \n        thumbnail: movie.thumbnail ? movie.thumbnail : BASE_URL_MOVIE + movie.image.formats.thumbnail.url, \n        movieId: movie.id\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  deleteMovieFromSaved(jwt, movieId) {\n    return fetch(`${this.baseUrl}/movies/${movieId}`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  toggleMovieSave(jwt, movie, movieId, isSaved) {\n    return isSaved ? this.deleteMovieFromSaved(jwt, movieId) : this.saveMovie(jwt, movie);\n  }\n\n  getUserInfo(jwt) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  updateUserInfo(jwt, email, name) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        email,\n        name\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n};\n\nconst mainApi = new MainApi({\n  baseUrl: \"https://api.annakin.diploma.students.nomoredomains.monster\"\n});\n\nexport default mainApi;","export const BASE_URL = \"https://api.annakin.diploma.students.nomoredomains.monster\";\n\nexport const register = (email, password, name) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n     email, password, name\n    })\n  })\n    .then((res) => {\n      try {\n        if(res.status === 200) {\n          return res.json();\n        }\n      } catch(err) {\n        return err;\n      }\n    })\n    .then((res) => {\n      return res;\n    });\n}\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    })\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        return data;\n      }\n    });\n}\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`,{\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n  .then((res) => res.json())\n  .then((data) => data);\n}","import { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {\n        () => props.isLoggedIn ?\n          <Component {...props} /> :\n          <Redirect to=\"./signin\" />\n      }\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport { Route, Switch, useHistory, useLocation } from 'react-router';\nimport Profile from '../Profile/Profile';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\nimport Menu from '../Menu/Menu';\nimport InfoPopup from '../InfoPopup/InfoPopup';\nimport mainApi from '../../utils/MainApi';\nimport moviesApi from '../../utils/MoviesApi';\nimport * as auth from '../../utils/auth';\nimport { searchMovies } from '../../utils/utils';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport { failMessage, movieSearchFailedMessage, registerSuccessMessage, updateSuccessMessage } from '../../utils/constants';\n\nfunction App() {\n  const history = useHistory();\n  const location = useLocation();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isInfoPopupOpen, setIsInfoPopupOpen] = useState(false);\n  const [isRegisterFailed, setIsRegisterFailed] = useState(false);\n\n  // для фильмов\n  const [beatfilmMovies, setBeatfilmMovies] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [savedMovies, setSavedMovies] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isFoundInMovies, setIsFoundInMovies] = useState(false);\n  const [isFoundInSavedMovies, setIsFoundInSavedMovies] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const [isRequestDone, setIsRequestDone] = useState(false);\n  const [isRequestInSavedDone, setIsRequestInSavedDone] = useState(false);\n  const [amountToRender, setAmountToRender] = useState(0);\n  // const [isMoreClicked, setIsMoreClicked] = useState(false);\n  const [isMoreBtnVisible, setIsMoreBtnVisible] = useState(false);\n  const [isOnSavedPage, setIsOnSavedPage] = useState(false);\n\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (isLoggedIn) {\n      Promise.all([\n        mainApi.getMovies(jwt),\n        mainApi.getUserInfo(jwt)\n      ]).then((values) => {\n        const [savedMovies, userInfo] = values;\n        localStorage.setItem('savedMovies', JSON.stringify(savedMovies));\n        setSavedMovies(savedMovies);\n        setCurrentUser(userInfo);\n        if (localStorage.getItem('beatFilmMovies')) {\n          setBeatfilmMovies(JSON.parse(localStorage.getItem('beatFilmMovies')));\n        }\n      })\n        .catch((err) => console.log(err));\n    }\n\n  }, [isLoggedIn]);\n\n  // проверка залогиген ли пользователь\n  useEffect(() => {\n    const handleTokenCheck = () => {\n      if (localStorage.getItem('jwt')) {\n        const jwt = localStorage.getItem('jwt');\n        auth.checkToken(jwt)\n          .then((res) => {\n            if (res) {\n              setCurrentUser({ email: res.email, name: res.name, _id: res._id });\n              setIsLoggedIn(true);\n              history.push('/movies');\n            }\n            else {\n              setIsLoggedIn(false);\n              history.push('/');\n            }\n          })\n          .catch((err) => console.log(err));\n      }\n    }\n    handleTokenCheck();\n    // очистка фильмов последнего поиска в хранилище\n    localStorage.removeItem('movies');\n  }, [history]);\n\n  // useEffect(() => {\n  //   const localMovies = JSON.parse(localStorage.getItem('movies'));\n  //   const moviesToRender = movies.slice(0,amountToRender);\n  //   console.log(moviesToRender);\n  //   // console.log(movies);\n  // }, [movies,amountToRender])\n\n  // обновление найденных фильмов с учетом сохраненных\n  const updateMovies = (movies) => {\n    const moviesWithSavedOnes = movies.map((movie) => {\n      const savedItem = savedMovies.find((m) => m.movieId === movie.id);\n      if (savedItem) {\n        return savedItem;\n      } else {\n        return movie;\n      }\n    });\n    localStorage.setItem('movies', JSON.stringify(moviesWithSavedOnes));\n    setMovies(moviesWithSavedOnes);\n    setAmountToRender(4);\n  };\n\n  // поиск фильма среди всех по ключевым словам и фильтр короткометражек\n  const searchPromise = (query, isShortFilm) => {\n    return new Promise((resolve, reject) => {\n      if (beatfilmMovies.length === 0) {\n        moviesApi.getBeatFilmMovies()\n          .then((movies) => {\n            localStorage.setItem('beatFilmMovies', JSON.stringify(movies));\n            setBeatfilmMovies(movies);\n            resolve(searchMovies(movies, query, isShortFilm));\n          })\n          .catch((err) => {\n            console.log(err);\n            reject(err);\n          });\n      } else {\n        resolve(searchMovies(beatfilmMovies, query, isShortFilm));\n      }\n    });\n  }\n  // поиск фильма среди сохраненных по ключевым словам и фильтр короткометражек\n  const searchInSavedPromise = (query, isShortFilm) => {\n    return new Promise((resolve, reject) => {\n      if (savedMovies) {\n        resolve(searchMovies(savedMovies, query, isShortFilm))\n      } else {\n        reject(movieSearchFailedMessage);\n      }\n    });\n  }\n\n  // обработчик поиска по всем фильмам\n  const handleSearchInMovies = (query, isShortFilm) => {\n    searchPromise(query, isShortFilm)\n      .then((res) => {\n        if (res && res.length > 0) {\n          setIsFoundInMovies(true);\n          localStorage.setItem('movies', JSON.stringify(res));\n          updateMovies(res);\n          setIsMoreBtnVisible(res.length > amountToRender);\n        } else {\n          setIsFoundInMovies(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoPopup(movieSearchFailedMessage);\n      })\n      .finally(() => {\n        setIsRequestDone(true);\n      });\n  }\n\n  // обработчик поиска по сохраненным фильмам\n  const handleSearchInSaved = (query, isShortFilm) => {\n    searchInSavedPromise(query, isShortFilm)\n      .then((res) => {\n        if (res && res.length > 0) {\n          setIsFoundInSavedMovies(true);\n          setSavedMovies(res);\n        } else {\n          setIsFoundInSavedMovies(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        openInfoPopup(movieSearchFailedMessage);\n      })\n      .finally(() => {\n        setIsRequestInSavedDone(true);\n      })\n  }\n\n  const handleSearch = (query, isShortFilm) => {\n    isOnSavedPage ? handleSearchInSaved(query, isShortFilm) : handleSearchInMovies(query, isShortFilm);\n  }\n\n  // фильтр короткометражек в фильмах\n  const filterShortFilms = (isChecked) => {\n    const localMovies = JSON.parse(localStorage.getItem('movies'));\n    if (localMovies && localMovies.length > 0) {\n      setIsFoundInMovies(true);\n      if (isChecked) {\n        const shortFilms = movies.filter((m) => m.duration <= 40);\n        setMovies(shortFilms);\n      } else {\n        setMovies(localMovies);\n      }\n    }\n    setIsRequestDone(true);\n  }\n\n  // фильтр короткометражек в сохраненных фильмах\n  const filterShortFilmsInSaved = (isChecked) => {\n    const localSavedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n    if (localSavedMovies && localSavedMovies.length > 0) {\n      setIsFoundInSavedMovies(true);\n      if (isChecked) {\n        const shortFilms = savedMovies.filter((m) => m.duration <= 40);\n        setSavedMovies(shortFilms);\n      } else {\n        setSavedMovies(localSavedMovies);\n      }\n    }\n    setIsRequestInSavedDone(true);\n  }\n\n  // обработчик переключения тумблера короткометражки\n  const handleTumblerClick = (isChecked, movie) => {\n    if (isOnSavedPage) {\n      localStorage.setItem('isTumblerInSavedOn', isChecked);\n      filterShortFilmsInSaved(isChecked);\n    }\n    else {\n      localStorage.setItem('isTumblerInMoviesOn', isChecked);\n      filterShortFilms(isChecked, movie);\n    }\n  }\n\n  // сохранение фильма в личном кабинете\n  const saveMovie = (movie) => {\n    const jwt = localStorage.getItem('jwt');\n    const localSavedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n    const isSaved = localSavedMovies.some((m) => m.movieId === movie.id);\n    if (!isSaved) {\n      mainApi.saveMovie(jwt, movie)\n        .then((movie) => {\n          setMovies(movies.map((m) => m.id === movie.movieId ? movie : m));\n          const newSavedMovies = [movie, ...localSavedMovies];\n          localStorage.setItem('savedMovies', JSON.stringify(newSavedMovies));\n          setSavedMovies(newSavedMovies);\n        })\n        .catch((err) => console.log(err))\n        .finally(() => {\n          console.log('saved', savedMovies.length)\n        });\n    }\n  }\n\n  // // удаление фильма из сохраненных\n  const deleteMovie = (movieId, movie) => {\n    const jwt = localStorage.getItem('jwt');\n    const localSavedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n    mainApi.deleteMovieFromSaved(jwt, movieId)\n      .then((deletedMovie) => {\n        const newMovies = localSavedMovies.filter((movie) => movie._id !== deletedMovie._id);\n        localStorage.setItem('savedMovies', JSON.stringify(newMovies));\n        setSavedMovies(newMovies);\n        setMovies(movies.map((movie) => movie._id === movieId ? beatfilmMovies.find((m) => m.id === movie.movieId) : movie));\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        console.log('after delete', savedMovies.length);\n      });\n  }\n\n  // сброс фильмов после поиска и отображение всех сохраненных фильмов\n  const handleOnSavedMoviesClick = () => {\n    setIsOnSavedPage(true);\n    const localSavedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n    if (localSavedMovies && localSavedMovies.length > 0) {\n      setIsFoundInSavedMovies(true);\n      setIsRequestInSavedDone(true);\n      setSavedMovies(localSavedMovies);\n    }\n  }\n\n  const handleOnMoviesClick = () => {\n    setIsOnSavedPage(false);\n    const localMovies = JSON.parse(localStorage.getItem('movies'));\n    if (localMovies && localMovies.length > 0) {\n      setIsFoundInMovies(true);\n      setIsRequestDone(true);\n      setMovies(localMovies);\n    }\n  }\n\n  useEffect(()=> {\n    console.log('amount', amountToRender);\n  }, [amountToRender])\n\n  const handleMoreBtnClick = () => {\n    const newAmount = amountToRender + Math.min((movies.length - amountToRender), 4);\n    setAmountToRender(newAmount);\n    if(movies.length - newAmount === 0) {\n      setIsMoreBtnVisible(false);\n    }\n  }\n\n  const openMenu = () => {\n    setIsMenuOpen(true);\n  }\n\n  // попап при ошибках в работе api\n  const openInfoPopup = (message) => {\n    setPopupMessage(message);\n    setIsInfoPopupOpen(true);\n  }\n\n  const closeAllPopups = () => {\n    setIsMenuOpen(false);\n    setIsInfoPopupOpen(false);\n  }\n\n  // авторизация\n  const handleLogin = (email, password) => {\n    auth.authorize(email, password)\n      .then((data) => {\n        console.log(data);\n        if (data && data.token) {\n          setCurrentUser({ email: data.email, name: data.name, _id: data._id })\n          setIsLoggedIn(true);\n          history.push('/movies');\n        } else {\n          setIsLoggedIn(false);\n          history.push('/');\n        }\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  // регистрация\n  const handleRegister = (email, password, name) => {\n    auth.register(email, password, name)\n      .then((res) => {\n        console.log('res', res);\n        if (res) {\n          setIsRegisterFailed(false);\n          openInfoPopup(registerSuccessMessage);\n          handleLogin(email, password);\n        } else {\n          setIsRegisterFailed(true);\n          openInfoPopup(failMessage);\n        }\n      })\n      .catch((err) => {\n        setIsRegisterFailed(true);\n        openInfoPopup(failMessage);\n        console.log(err.message);\n      });\n  }\n\n  // выход из аккаунта\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setCurrentUser({});\n    localStorage.removeItem('jwt');\n    history.push('/');\n  }\n\n  // обработчик обновления данных пользователя\n  const handleEditProfile = (email, name) => {\n    const jwt = localStorage.getItem('jwt');\n    mainApi.updateUserInfo(jwt, email, name)\n      .then((res) => {\n        if (res) {\n          setCurrentUser({ email: res.email, name: res.name, _id: res._id });\n          openInfoPopup(updateSuccessMessage);\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Header pathname={location.pathname} isLoggedIn={isLoggedIn} handleMenuOpen={openMenu}\n          handleOnSavedMoviesClick={handleOnSavedMoviesClick} handleOnMoviesClick={handleOnMoviesClick} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Main />\n          </Route>\n          <ProtectedRoute exact path=\"/movies\" component={Movies} isLoggedIn={isLoggedIn} movies={movies}\n            handleSearchSubmit={handleSearch} handleTumblerClick={handleTumblerClick} saveMovie={saveMovie}\n            deleteMovie={deleteMovie} isFound={isFoundInMovies} isRequestDone={isRequestDone} amountToRender={amountToRender}\n            handleMoreBtnClick={handleMoreBtnClick} isMoreBtnVisible={isMoreBtnVisible}/>\n          <ProtectedRoute exact path=\"/saved-movies\" component={SavedMovies} isLoggedIn={isLoggedIn} movies={savedMovies}\n            handleSearchSubmit={handleSearchInSaved} handleTumblerClick={handleTumblerClick} saveMovie={saveMovie}\n            deleteMovie={deleteMovie} isFound={isFoundInSavedMovies} isRequestDone={isRequestInSavedDone} />\n          <ProtectedRoute exact path=\"/profile\" component={Profile} isLoggedIn={isLoggedIn} handleLogout={handleLogout}\n            handleSubmit={handleEditProfile} />\n          <Route exact path=\"/signin\">\n            <Login onLogin={handleLogin} />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Register onRegister={handleRegister} />\n          </Route>\n          <Route path=\"*\">\n            <NotFoundPage />\n          </Route>\n        </Switch>\n\n        <Footer pathname={location.pathname} />\n\n        <Menu handleMenuClose={closeAllPopups} isOpen={isMenuOpen} handleOnSavedMoviesClick={handleOnSavedMoviesClick}\n          handleOnMoviesClick={handleOnMoviesClick} />\n        <InfoPopup closePopup={closeAllPopups} isOpen={isInfoPopupOpen} isFailed={isRegisterFailed} message={popupMessage} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}